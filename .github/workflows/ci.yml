name: Java CI with Gradle

on:
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      url: ${{ secrets.URL }}
      admin_api_token_id: ${{ secrets.ADMIN_API_TOKEN_ID }}
      admin_api_token_secret: ${{ secrets.ADMIN_API_TOKEN_SECRET }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'gradle'

      - name: Install latest Google Chrome and ChromeDriver
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: latest
          install-chromedriver: true

      - name: Check Chrome and ChromeDriver version
        run: |
          chrome --version
          chromedriver --version

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start MariaDB container
        run: |
          docker network create bookstack-network || true
          docker run -d \
          --name=bookstack_db \
          --network bookstack-network \
          -e PUID=1000 \
          -e PGID=1000 \
          -e TZ=Europe/London \
          -e MYSQL_ROOT_PASSWORD=${{ env.MYSQL_ROOT_PASSWORD }} \
          -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} \
          -e MYSQL_USER=${{ env.MYSQL_USER }} \
          -e MYSQL_PASSWORD=${{ env.MYSQL_PASSWORD }} \
          --restart unless-stopped \
          lscr.io/linuxserver/mariadb:latest

      - name: Wait for database to be ready
        run: sleep 10

      - name: Decrypt database backup
        run: |
          openssl enc -aes-256-cbc -d -pbkdf2 -iter 100000 -in ${{ github.workspace }}/backupDB/backup.sql.enc -out ${{ github.workspace }}/backupDB/backup.sql -k ${{ env.BACKUP_PASSWORD }}

      - name: Restore database from backup
        run: |
          docker cp ${{ github.workspace }}/backupDB/backup.sql bookstack_db:/backup.sql
          docker exec -i bookstack_db /bin/sh -c "cat /backup.sql | /usr/bin/mysql -u ${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }} ${{ env.MYSQL_DATABASE }}"
          rm -f ${{ github.workspace }}/backupDB/backup.sql

      - name: Start BookStack container
        run: |
          docker run -d \
            --name=bookstack \
            --network bookstack-network \
            -e PUID=1000 \
            -e PGID=1000 \
            -e TZ=Etc/UTC \
            -e APP_URL=${{ env.url }} \
            -e DB_HOST=bookstack_db \
            -e DB_PORT=3306 \
            -e DB_USER=${{ env.MYSQL_USER }} \
            -e DB_PASS=${{ env.MYSQL_PASSWORD }} \
            -e DB_DATABASE=${{ env.MYSQL_DATABASE }} \
            -e ADMIN_API_TOKEN_ID=${{ env.admin_api_token_id }} \
            -e ADMIN_API_TOKEN_SECRET=${{ env.admin_api_token_secret }} \
            -p 6875:80 \
            --restart unless-stopped \
            lscr.io/linuxserver/bookstack:latest

      - name: Wait for services to be ready
        run: sleep 10

      - name: Run tests and capture output
        run: ./gradlew test --continue | tee test_output.log || true
        env:
          CHROME_OPTIONS: --remote-allow-origins=*;--disable-gpu;--no-sandbox;--disable-dev-shm-usage;--headless=new;--window-size=1920,1080

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report Action
        uses: mgrybyk-org/allure-report-branch-js-action@v1
        if: always()
        continue-on-error: true
        id: allure
        with:
          report_id: 'self-test'
          gh_pages: 'gh-pages'
          report_dir: './build/allure-results'

      - name: Git Commit and Push Action
        uses: mgrybyk-org/git-commit-pull-push-action@v1
        if: always()
        with:
          repository: gh-pages
          branch: gh-pages
          pull_args: --rebase -X ours

      - name: Comment PR with Allure Report link
        if: ${{ always() && github.event_name == 'pull_request' && steps.allure.outputs.report_url }}
        continue-on-error: true
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ${{ steps.allure.outputs.test_result_icon }} [Allure Report](${{ steps.allure.outputs.report_url }}) | [History](${{ steps.allure.outputs.report_history_url }})
          comment_tag: allure_report
          mode: recreate

      - name: Fail the build if there were test failures
        run: |
          if grep -q "FAILED" test_output.log; then
            echo "Test failures detected, failing the build."
            exit 1
          fi

      - name: Stop and remove containers
        if: always()
        run: |
          docker stop bookstack bookstack_db || true
          docker rm bookstack bookstack_db || true
          docker network rm bookstack-network || true